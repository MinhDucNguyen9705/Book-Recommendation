name: Train and Deploy Recommender

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  train:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Nếu cần .databrickscfg, sao chép nội dung vào workspace từ secret
      - name: Configure Databricks CLI
        run: |
          mkdir -p ~/.databricks
          cat <<EOF > ~/.databrickscfg
          [DEFAULT]
          host = ${{ secrets.DATABRICKS_HOST }}
          token = ${{ secrets.DATABRICKS_TOKEN }}
          EOF

      - name: Install dependencies & yq
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyyaml databricks-cli

      - name: Read training parameters from YAML
        id: read_params
        run: |
            python - << 'EOF'
            import yaml
            with open('training_params.yml') as f:
                cfg = yaml.safe_load(f)
            print('::set-output name=books_path::' + str(cfg.get('books_path')))
            print('::set-output name=interactions_path::' + str(cfg.get('interactions_path')))
            print('::set-output name=n_factors::' + str(cfg.get('n_factors')))
            print('::set-output name=max_iter::' + str(cfg.get('max_iter')))
            val = cfg.get('sample_size')
            print('::set-output name=sample_size::' + (str(val) if val is not None else ''))
            EOF

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install project dependencies
        run: pip install -r requirements.txt

      - name: Train and log model
        env:
          MLFLOW_TRACKING_URI: "databricks"
          MLFLOW_REGISTRY_URI: "databricks-uc"
          MLFLOW_EXPERIMENT: "/Users/uytbvn@gmail.com/hybrid_model"
          MLFLOW_REGISTERED_MODEL: "ml_catalog.ml_schema.popularity"
        run: |
          python main.py \
            --books_path "${{ steps.read_params.outputs.books_path }}" \
            --interactions_path "${{ steps.read_params.outputs.interactions_path }}" \
            --n_factors ${{ steps.read_params.outputs.n_factors }} \
            --max_iter ${{ steps.read_params.outputs.max_iter }} \
            $([[ -n "${{ steps.read_params.outputs.sample_size }}" ]] && echo "--sample_size ${{ steps.read_params.outputs.sample_size }}")

      - name: Deploy model (placeholder)
        if: success()
        run: echo "Deploy step - implement as needed"